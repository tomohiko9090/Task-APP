{"ast":null,"code":"var app = Vue.createApp({\n  data: function data() {\n    return {\n      activeTab: 'tabs-1',\n      tabs: [{\n        name: 'tabs-1',\n        text: '未着手'\n      }, {\n        name: 'tabs-2',\n        text: '実施中'\n      }, {\n        name: 'tabs-3',\n        text: '完了'\n      }]\n    };\n  }\n});\nvar vm = app.mount(\"#app\"); // var timer1; //タイマーを格納する変数（タイマーID）の宣言\n// //カウントダウン関数を1000ミリ秒毎に呼び出す関数\n// function cntStart()\n// {\n//   document.timer.elements[2].disabled=true;\n//   timer1=setInterval(\"countDown()\",1000);\n// }\n// //タイマー停止関数\n// function cntStop()\n// {\n//   document.timer.elements[2].disabled=false;\n//   clearInterval(timer1);\n// }\n// //カウントダウン関数\n// function countDown()\n// {\n//   var min=document.timer.elements[0].value;\n//   var sec=document.timer.elements[1].value;\n//   if( (min==\"\") && (sec==\"\") )\n//   {\n//     alert(\"時刻を設定してください！\");\n//     reSet();\n//   }\n//   else\n//   {\n//     if (min==\"\") min=0;\n//     min=parseInt(min);\n//     if (sec==\"\") sec=0;\n//     sec=parseInt(sec);\n//     tmWrite(min*60+sec-1);\n//   }\n// }\n// //残り時間を書き出す関数\n// function tmWrite(int)\n// {\n//   int=parseInt(int);\n//   if (int<=0)\n//   {\n//     reSet();\n//     alert(\"時間です！\");\n//   }\n//   else\n//   {\n//     //残り分数はintを60で割って切り捨てる\n//     document.timer.elements[0].value=Math.floor(int/60);\n//     //残り秒数はintを60で割った余り\n//     document.timer.elements[1].value=int % 60;\n//   }\n// }\n// //フォームを初期状態に戻す（リセット）関数\n// function reSet()\n// {\n//   document.timer.elements[0].value=\"0\";\n//   document.timer.elements[1].value=\"0\";\n//   document.timer.elements[2].disabled=false;\n//   clearInterval(timer1);\n// }  \n\nvar access_time = new Date();\nvar min_time = 3 * 60 * 1000; //3分をミリ秒にしたもの\n\nconsole.log(min_time);\nvar countdown = setInterval(function () {\n  var now = new Date(); //今の日時\n  // const target = new Date(\"2022/9/11 1:00:00\")   //最初にアクセスした時間\n\n  var elapsed_time = now - access_time; //カウントアップ\n\n  console.log(elapsed_time);\n  var remainTime = min_time - elapsed_time; //差分を取る（ミリ秒で返ってくる\n  //指定の日時を過ぎていたら処理をしない\n\n  if (remainTime < 0) return false; //差分の日・時・分・秒を取得\n  // const difDay  = Math.floor(remainTime / 1000 / 60 / 60 / 24)\n  // const difHour = Math.floor(remainTime / 1000 / 60 / 60 ) % 24\n\n  var difMin = Math.floor(remainTime / 1000 / 60) % 60;\n  var difSec = Math.floor(remainTime / 1000) % 60; //残りの日時を上書き\n  // document.getElementById(\"countdown-day\").textContent  = difDay\n  // document.getElementById(\"countdown-hour\").textContent = difHour\n\n  document.getElementById(\"countdown-min\").textContent = difMin;\n  document.getElementById(\"countdown-sec\").textContent = difSec; //指定の日時になればカウントを止める\n\n  if (remainTime < 0) clearInterval(countdown);\n}, 1000); //1秒間に1度処理","map":{"version":3,"names":["app","Vue","createApp","data","activeTab","tabs","name","text","vm","mount","access_time","Date","min_time","console","log","countdown","setInterval","now","elapsed_time","remainTime","difMin","Math","floor","difSec","document","getElementById","textContent","clearInterval"],"sources":["/Users/kuzubatomohiko/all_data/10_Engineering/Ruby/Task-APP/taskapp/app/javascript/packs/main.js"],"sourcesContent":["const app = Vue.createApp({\n  data(){\n      return {\n          activeTab: 'tabs-1',\n          tabs: [\n              {name:'tabs-1', text: '未着手'},\n              {name:'tabs-2', text: '実施中'},\n              {name:'tabs-3', text: '完了'},\n          ],\n      }\n  },\n})\nconst vm = app.mount(\"#app\")\n\n\n\n\n\n// var timer1; //タイマーを格納する変数（タイマーID）の宣言\n\n// //カウントダウン関数を1000ミリ秒毎に呼び出す関数\n// function cntStart()\n// {\n//   document.timer.elements[2].disabled=true;\n//   timer1=setInterval(\"countDown()\",1000);\n// }\n\n// //タイマー停止関数\n// function cntStop()\n// {\n//   document.timer.elements[2].disabled=false;\n//   clearInterval(timer1);\n// }\n\n// //カウントダウン関数\n// function countDown()\n// {\n//   var min=document.timer.elements[0].value;\n//   var sec=document.timer.elements[1].value;\n  \n//   if( (min==\"\") && (sec==\"\") )\n//   {\n//     alert(\"時刻を設定してください！\");\n//     reSet();\n//   }\n//   else\n//   {\n//     if (min==\"\") min=0;\n//     min=parseInt(min);\n    \n//     if (sec==\"\") sec=0;\n//     sec=parseInt(sec);\n    \n//     tmWrite(min*60+sec-1);\n//   }\n// }\n\n// //残り時間を書き出す関数\n// function tmWrite(int)\n// {\n//   int=parseInt(int);\n  \n//   if (int<=0)\n//   {\n//     reSet();\n//     alert(\"時間です！\");\n//   }\n//   else\n//   {\n//     //残り分数はintを60で割って切り捨てる\n//     document.timer.elements[0].value=Math.floor(int/60);\n//     //残り秒数はintを60で割った余り\n//     document.timer.elements[1].value=int % 60;\n//   }\n// }\n\n// //フォームを初期状態に戻す（リセット）関数\n// function reSet()\n// {\n//   document.timer.elements[0].value=\"0\";\n//   document.timer.elements[1].value=\"0\";\n//   document.timer.elements[2].disabled=false;\n//   clearInterval(timer1);\n// }  \n\nconst access_time = new Date()\nconst min_time = 3 * 60 * 1000 //3分をミリ秒にしたもの\nconsole.log(min_time)\n\n\nlet countdown = setInterval(function(){\n    const now = new Date()  //今の日時\n    // const target = new Date(\"2022/9/11 1:00:00\")   //最初にアクセスした時間\n    const elapsed_time = now - access_time //カウントアップ\n    console.log(elapsed_time)\n\n    const remainTime = min_time - elapsed_time  //差分を取る（ミリ秒で返ってくる\n    \n\n\n    //指定の日時を過ぎていたら処理をしない\n    if(remainTime < 0) return false \n\n    //差分の日・時・分・秒を取得\n    // const difDay  = Math.floor(remainTime / 1000 / 60 / 60 / 24)\n    // const difHour = Math.floor(remainTime / 1000 / 60 / 60 ) % 24\n    const difMin  = Math.floor(remainTime / 1000 / 60) % 60\n    const difSec  = Math.floor(remainTime / 1000) % 60\n\n    //残りの日時を上書き\n    // document.getElementById(\"countdown-day\").textContent  = difDay\n    // document.getElementById(\"countdown-hour\").textContent = difHour\n    document.getElementById(\"countdown-min\").textContent  = difMin\n    document.getElementById(\"countdown-sec\").textContent  = difSec\n\n    //指定の日時になればカウントを止める\n    if(remainTime < 0) clearInterval(countdown)\n\n}, 1000)    //1秒間に1度処理\n"],"mappings":"AAAA,IAAMA,GAAG,GAAGC,GAAG,CAACC,SAAJ,CAAc;EACxBC,IADwB,kBAClB;IACF,OAAO;MACHC,SAAS,EAAE,QADR;MAEHC,IAAI,EAAE,CACF;QAACC,IAAI,EAAC,QAAN;QAAgBC,IAAI,EAAE;MAAtB,CADE,EAEF;QAACD,IAAI,EAAC,QAAN;QAAgBC,IAAI,EAAE;MAAtB,CAFE,EAGF;QAACD,IAAI,EAAC,QAAN;QAAgBC,IAAI,EAAE;MAAtB,CAHE;IAFH,CAAP;EAQH;AAVuB,CAAd,CAAZ;AAYA,IAAMC,EAAE,GAAGR,GAAG,CAACS,KAAJ,CAAU,MAAV,CAAX,C,CAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,IAAMC,QAAQ,GAAG,IAAI,EAAJ,GAAS,IAA1B,C,CAA+B;;AAC/BC,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAGA,IAAIG,SAAS,GAAGC,WAAW,CAAC,YAAU;EAClC,IAAMC,GAAG,GAAG,IAAIN,IAAJ,EAAZ,CADkC,CACV;EACxB;;EACA,IAAMO,YAAY,GAAGD,GAAG,GAAGP,WAA3B,CAHkC,CAGK;;EACvCG,OAAO,CAACC,GAAR,CAAYI,YAAZ;EAEA,IAAMC,UAAU,GAAGP,QAAQ,GAAGM,YAA9B,CANkC,CAMU;EAI5C;;EACA,IAAGC,UAAU,GAAG,CAAhB,EAAmB,OAAO,KAAP,CAXe,CAalC;EACA;EACA;;EACA,IAAMC,MAAM,GAAIC,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAG,IAAb,GAAoB,EAA/B,IAAqC,EAArD;EACA,IAAMI,MAAM,GAAIF,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAG,IAAxB,IAAgC,EAAhD,CAjBkC,CAmBlC;EACA;EACA;;EACAK,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,WAAzC,GAAwDN,MAAxD;EACAI,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,WAAzC,GAAwDH,MAAxD,CAvBkC,CAyBlC;;EACA,IAAGJ,UAAU,GAAG,CAAhB,EAAmBQ,aAAa,CAACZ,SAAD,CAAb;AAEtB,CA5B0B,EA4BxB,IA5BwB,CAA3B,C,CA4BY"},"metadata":{},"sourceType":"module"}